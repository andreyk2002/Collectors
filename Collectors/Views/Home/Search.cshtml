@using Microsoft.AspNetCore.Mvc.Localization;
@using Collectors.Classes;
@using Collectors.Data.Classes;
@using Microsoft.AspNetCore.Identity
@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@inject SignInManager<IdentityUser> SignInManager
@model List<ItemModel>;

@{
    string name = SharedLocalizer["Name"].Value;
    string tags = SharedLocalizer["Tags"].Value;
}
<div id="container">
    <div class="card-columns">
        @{
            foreach (var element in Model)
            {

                <div class="card m-4 bg-info" style="width: 20rem;">
                    <div class="card-body">
                        <h5 class="card-title">@Html.ActionLink(element.Name, "Index", "Item", new { id = element.ItemId }, null)</h5>
                        <p class="card-text">@element.Tags</p>
                    </div>
                    <ul class="list-group list-group-flush">
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <li class="list-group-item field">
                                <form asp-action="Like">
                                    <input name="redirectAction" value="Search" type="hidden" />
                                    <input name="itemId" value="@element.ItemId" type="hidden" />
                                    <input name="searchStr" value="@ViewBag.searchString" type="hidden" />
                                    <button style="border-radius:50%" class="like"><img src="~/bootstrap-icons/icons/heart.svg" /></button>
                                </form>
                                <span class="likesCount">@element.Likes</span>
                            </li>

                        }
                        @for (int i = 0; i < element.AdditionalFieldsNames.Count; i++)
                        {
                            string fieldName = element.AdditionalFieldsNames[i];
                            string value = element.AdditionalFieldsValues[i];
                            if (!string.IsNullOrEmpty(value))
                            {
                                <li class="list-group-item field">
                                    @fieldName:
                                    @Html.Raw(value)
                                </li>
                            }
                        }
                    </ul>
                </div>
            }
        }
    </div>
</div>
