@using Microsoft.AspNetCore.Mvc.Localization;
@using Collectors.Classes;
@using Collectors.Data.Classes;
@using Microsoft.AspNetCore.Identity
@using Markdig;
@inject UserManager<IdentityUser> UserManager;
@inject IViewLocalizer Localizer;
@{
    ViewData["Title"] = "Home Page";
}
@model StartModel;

<div class="text-center">
    <div id="carouselExampleControls" class="carousel slide w-100" data-ride="carousel">
        <div class="carousel-inner">
            @{
                for (int i = 0; i < Model.BiggestCollections.Count; i++)
                {
                    var collection = Model.BiggestCollections[i];
                    string activeItemString = (i == 0) ? "active" : "";
                    <div class="carousel-item @activeItemString">
                        @if (collection.Image != null)
                        {
                            <img class="center-block w-100 h-auto" src="data:image/jpeg;base64,
                                 @(Convert.ToBase64String(collection.Image))" alt="">
                        }
                        else
                        {
                            <img class="center-block w-100 h-auto" src="~/img/blank.jfif" alt="">
                        }
                        <div class="centered">
                            <h1 class="big-header">Theme : @Enum.GetValues(typeof(CollectionTheme)).GetValue(collection.ThemeId)</h1>
                            <div class="description">@Html.Raw(Markdown.ToHtml(collection.ShortDescription))</div>
                            <form>
                                <input name="id" type="hidden" value="@collection.Id" />
                                <button class="btn-info" asp-action="Index" asp-controller="Items">
                                    @Localizer["View items"]
                                </button>
                                @if (ViewBag.Role != null && ViewBag.Role[0] == "admin")
                                {


                                    <button class="btn-success" asp-action="Index" asp-controller="Admin">
                                        @Localizer["ManageUsers"]
                                    </button>

                                }
                            </form>
                        </div>
                    </div>
                }
            }
            <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
    <div class="mb-5 darkmode-ignore bg-info" id="tagsCloud">
        <h4>@Localizer["Search items by tags"]</h4>
        <form asp-action="SearchTags" asp-controller="Home">
            @{
                for (int i = 0; i < Model.Tags.Length; i++)
                {
                    <button type="submit" class="m-1 tags bg-info">@Model.Tags[i]</button>
                }
                <input id="tagSearch" type="hidden" name="tag" />
            }
        </form>
    </div>
    <div class="mt-4 mb-5">
        <div class="card-columns">
            @{
                foreach (var item in Model.LatestItems)
                {
                    <div class="card m-4 bg-info" style="width: 20rem;">
                        <div class="card-body">
                            <h5 class="card-title">@Html.ActionLink(item.Name, "Index", "Item", new { id = item.ItemId }, null)</h5>
                            <p class="card-text">@item.Tags</p>
                        </div>
                        <ul class="list-group list-group-flush">
                            @for (int i = 0; i < item.AdditionalFieldsNames.Count; i++)
                            {
                                string fieldName = item.AdditionalFieldsNames[i];
                                string value = item.AdditionalFieldsValues[i];
                                if (!string.IsNullOrEmpty(value))
                                {
                                    <li class="list-group-item field">
                                        @fieldName:
                                        @Html.Raw(value)
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                }
            }
        </div>
    </div>
</div>
@section scripts{
    <script src="~/js/tagsCloud.js"></script>
}
